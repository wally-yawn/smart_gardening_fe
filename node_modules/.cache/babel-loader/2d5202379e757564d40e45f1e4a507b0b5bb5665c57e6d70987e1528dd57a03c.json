{"ast":null,"code":"var _jsxFileName = \"/Users/devlin/Desktop/turing_work/3mod/smart_gardening_fe/src/Gardens/Gardens.js\";\nimport React from \"react\";\nimport \"./Gardens.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Garden({\n  id,\n  key,\n  gardenName,\n  plants\n}) {\n  //display a header\n  //iterate through each garden by referring to the gardens table in the backend and make a Garden component. Then in Garden iterate over plants\n\n  console.log();\n  const allPlants = plants.map(plant => {\n    return /*#__PURE__*/_jsxDEV(Plant, {\n      children: [\"id=\", plant.id, \"key=\", plant.id, \"name=\", plant.name, \"image = \", plant.image]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  });\n  //display garden name\n  //when looking at each garden, iterate through it's plants by using the table in the backend\n  //display the plant name, img, description, and button to remove it from favorites\n  //display a footer\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"MyGardenPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: gardenName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allPlants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Garden;\nvar _c;\n$RefreshReg$(_c, \"Garden\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Garden","id","key","gardenName","plants","console","log","allPlants","map","plant","Plant","children","name","image","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/devlin/Desktop/turing_work/3mod/smart_gardening_fe/src/Gardens/Gardens.js"],"sourcesContent":["import React from \"react\";\nimport \"./Gardens.css\";\n\nfunction Garden({ id, key, gardenName, plants }) {\n  //display a header\n  //iterate through each garden by referring to the gardens table in the backend and make a Garden component. Then in Garden iterate over plants\n\n  console.log();\n  const allPlants = plants.map((plant) => {\n    return (\n      <Plant>\n        id={plant.id}\n        key={plant.id}\n        name={plant.name}\n        image = {plant.image}\n      </Plant>\n    );\n  });\n  //display garden name\n  //when looking at each garden, iterate through it's plants by using the table in the backend\n  //display the plant name, img, description, and button to remove it from favorites\n  //display a footer\n\n  return (\n    <div>\n      <section className=\"MyGardenPage\">\n        <h2>{gardenName}</h2>\n        <div>{allPlants}</div>\n      </section>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,MAAMA,CAAC;EAAEC,EAAE;EAAEC,GAAG;EAAEC,UAAU;EAAEC;AAAO,CAAC,EAAE;EAC/C;EACA;;EAEAC,OAAO,CAACC,GAAG,CAAC,CAAC;EACb,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAK;IACtC,oBACEV,OAAA,CAACW,KAAK;MAAAC,QAAA,GAAC,KACF,EAACF,KAAK,CAACR,EAAE,EAAC,MACT,EAACQ,KAAK,CAACR,EAAE,EAAC,OACT,EAACQ,KAAK,CAACG,IAAI,EAAC,UACT,EAACH,KAAK,CAACI,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEZ,CAAC,CAAC;EACF;EACA;EACA;EACA;;EAEA,oBACElB,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAASmB,SAAS,EAAC,cAAc;MAAAP,QAAA,gBAC/BZ,OAAA;QAAAY,QAAA,EAAKR;MAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBlB,OAAA;QAAAY,QAAA,EAAMJ;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACE,EAAA,GA5BQnB,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}